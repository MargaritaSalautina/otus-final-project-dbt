
  create view "postgres"."dbt"."stg_orders__dbt_tmp" as (
    








WITH staging AS (
-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    id,
    order_date,
    length,
    height,
    width,
    weight,
    currency_code

    FROM "postgres"."dbt"."source_orders"
),

derived_columns AS (

    SELECT

    id,
    order_date,
    length,
    height,
    width,
    weight,
    currency_code,
    id AS ORDER_KEY,
    'CSV_ORDERS'::TEXT AS RECORD_SOURCE

    FROM source_data
),

hashed_columns AS (

    SELECT

    id,
    order_date,
    length,
    height,
    width,
    weight,
    currency_code,
    ORDER_KEY,
    RECORD_SOURCE,

    DECODE(MD5(NULLIF(UPPER(TRIM(CAST(id AS VARCHAR))), '')), 'hex') AS ORDER_PK,

    DECODE(MD5(CONCAT(
        COALESCE(NULLIF(UPPER(TRIM(CAST(height AS VARCHAR))), ''), '^^'), '||',
        COALESCE(NULLIF(UPPER(TRIM(CAST(length AS VARCHAR))), ''), '^^'), '||',
        COALESCE(NULLIF(UPPER(TRIM(CAST(order_date AS VARCHAR))), ''), '^^'), '||',
        COALESCE(NULLIF(UPPER(TRIM(CAST(weight AS VARCHAR))), ''), '^^'), '||',
        COALESCE(NULLIF(UPPER(TRIM(CAST(width AS VARCHAR))), ''), '^^')
    )), 'hex') AS ORDER_HASHDIFF

    FROM derived_columns
),

columns_to_select AS (

    SELECT

    id,
    order_date,
    length,
    height,
    width,
    weight,
    currency_code,
    ORDER_KEY,
    RECORD_SOURCE,
    ORDER_PK,
    ORDER_HASHDIFF

    FROM hashed_columns
)

SELECT * FROM columns_to_select
)

SELECT *,
    current_timestamp AS LOAD_DATE,
    current_timestamp AS EFFECTIVE_FROM
FROM staging
  );